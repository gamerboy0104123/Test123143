{"version":3,"sources":["./src/app/video-panel/video-panel.component.ts","./src/app/video-panel/video-panel.component.html","./src/app/participants/participants.component.html","./src/app/participants/participants.component.ts","./src/environments/environment.ts","./src/app/video-player/video-player.component.html","./src/app/video-player/video-player.component.ts","./src/app/conference/conference.component.ts","./src/app/conference/conference.component.html","./src/app/video-panel/video-panel.directive.ts","./src/app/translate.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/join-conference/join-conference.component.ts","./src/app/join-conference/join-conference.component.html","./src/app/conference.service.ts","./src/app/app.module.ts","./src/app/translate.pipe.ts","./src/app/welcome-page/welcome-page.component.ts","./src/app/welcome-page/welcome-page.component.html","./src/app/create-conference/create-conference.component.ts","./src/app/create-conference/create-conference.component.html","./src/AppSettings.ts","./src/app/top-bar/top-bar.component.ts","./src/app/top-bar/top-bar.component.html","./src/app/storage.service.ts","./src/app/credentials-vault.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, ComponentFactoryResolver, ComponentRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { MediaStreamWithType } from '@voxeet/voxeet-web-sdk/types/models/MediaStream';\nimport { Participant } from '@voxeet/voxeet-web-sdk/types/models/Participant';\nimport { VideoPlayerComponent } from '../video-player/video-player.component';\nimport { VideoPanelDirective } from './video-panel.directive';\n\n@Component({\n    selector: 'app-video-panel',\n    templateUrl: './video-panel.component.html',\n    styleUrls: ['./video-panel.component.css'],\n})\nexport class VideoPanelComponent implements OnInit {\n    @ViewChild(VideoPanelDirective, { static: true }) videoHost!: VideoPanelDirective;\n\n    private children: Map<string, VideoPlayerComponent> = new Map();\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n\n    ngOnInit(): void {\n    }\n\n    addParticipant(peer: Participant, stream: MediaStreamWithType): void {\n       \n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(VideoPlayerComponent);\n        const viewContainerRef = this.videoHost.viewContainerRef;\n        const componentRef = viewContainerRef.createComponent<VideoPlayerComponent>(componentFactory);\n        componentRef.instance.stream = stream;\n        this.children.set(peer.id, componentRef.instance);\n    }\n\n    updateParticipant(peer: Participant, stream: MediaStreamWithType): void {\n        if (this.children.has(peer.id)) {\n            this.children.get(peer.id).stream = stream;\n        } else {\n            this.addParticipant(peer, stream);\n        }\n    }\n\n    removeParticipant(peer: Participant): void {\n        this.children.delete(peer.id);\n    }\n}\n","<div class=\"video-panel\">\n    <ng-template videoHost></ng-template>\n</div>\n","<div class=\"right-panel\">\n    <ul>\n        <li *ngFor=\"let member of participants\">\n            <div class=\"participant\">\n                <div class=\"name\" id=\"{{member.id}}\">{{ member.info.name }}</div>\n                <div class=\"info\">\n                    <div class=\"status\">{{ member.status }}</div>\n                </div>\n            </div>\n        </li>\n    </ul>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ConferenceService } from '../conference.service';\n\n@Component({\n    selector: 'app-participants',\n    templateUrl: './participants.component.html',\n    styleUrls: ['./participants.component.css'],\n})\nexport class ParticipantsComponent implements OnInit {\n    constructor(private confService: ConferenceService) {}\n\n    ngOnInit(): void {}\n\n    get participants() {\n        return this.confService.all.filter(user => user.type === 'user');\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<video #video playsinline=\"true\" autoplay=\"autoplay\" muted=\"true\" width=\"200\" height=\"200\">\n    <p *ngIf=\"error\">{{ error }}</p>\n</video>\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MediaStreamWithType } from '@voxeet/voxeet-web-sdk/types/models/MediaStream';\nimport { Participant } from '@voxeet/voxeet-web-sdk/types/models/Participant';\n\n@Component({\n    selector: 'app-video-player',\n    templateUrl: './video-player.component.html',\n    styleUrls: ['./video-player.component.css'],\n})\nexport class VideoPlayerComponent implements OnInit {\n    @ViewChild(\"video\") video: any;\n\n    private videoStream: MediaStreamWithType;\n\n    error = null;\n\n    constructor() {}\n\n    get stream() {\n        return this.videoStream;\n    }\n\n    set stream(value: MediaStreamWithType) {\n        this.videoStream = value;\n        if (this.video) {\n            if (this.videoStream != null && this.videoStream.getVideoTracks().length) {\n                this.video.nativeElement.srcObject = this.videoStream;\n                this.video.nativeElement.play();\n            } else {\n                this.video.nativeElement.srcObject = null;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n\n    }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport Conference from '@voxeet/voxeet-web-sdk/types/models/Conference';\nimport { MediaStreamWithType } from '@voxeet/voxeet-web-sdk/types/models/MediaStream';\nimport { Participant } from '@voxeet/voxeet-web-sdk/types/models/Participant';\nimport { Observer } from 'rxjs';\n\nimport { ConferenceService } from '../conference.service';\nimport { VideoPanelComponent } from '../video-panel/video-panel.component';\n\n@Component({\n    selector: 'app-conference',\n    templateUrl: './conference.component.html',\n    styleUrls: ['./conference.component.css'],\n})\nexport class ConferenceComponent implements OnInit {\n    @ViewChild(VideoPanelComponent) private videoPanel! : VideoPanelComponent;\n\n    private streamObserver: Observer<{ peer: Participant, stream: MediaStreamWithType, eventType: string }> = null;\n\n    conferenceId: string = null;\n    conference: Conference = null;\n    name: string = null;\n    me: Participant = null;\n\n    error = null;\n\n    audioActive = false;\n    videoActive = false;\n\n    constructor(\n        private confService: ConferenceService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) {\n        this.initStreamObserver();\n    }\n\n    get toggleAudioButtonTitle() {\n        return this.audioActive ? 'Mute Audio' : 'Unmute Audio';\n    }\n\n    get toggleAudioButtonIcon() {\n        return this.audioActive ? 'voice_over_off' : 'record_voice_over';\n    }\n\n    get toggleVideoButtonTitle() {\n        return this.videoActive ? 'Disable Video' : 'Enable Video';\n    }\n\n    get toggleVideoButtonIcon() {\n        return this.videoActive ? 'videocam_off' : 'videocam';\n    }\n\n    async ngOnInit(): Promise<void> {\n        // read conference id and participant name from URI\n        this.conferenceId = this.route.snapshot.paramMap.get('id');\n        this.name = this.route.snapshot.paramMap.get('name');\n\n        try {\n            // create conference or join to existing\n            const conf = await this.confService.join(\n                this.conferenceId,\n                this.name,\n                this.streamObserver\n            );\n            this.conference = conf;\n\n            this.audioActive = true;\n            this.videoActive = false;\n\n            this.me = this.confService.me;\n        } catch (err) {\n            this.error = err;\n        }\n    }\n\n    private initStreamObserver() {\n        this.streamObserver = {\n            next: ({ peer, stream, eventType }) => {\n                if (eventType === \"streamAdded\") {\n                    this.videoPanel.addParticipant(peer, stream);\n                } else if (eventType === \"streamUpdated\") {\n                    this.videoPanel.updateParticipant(peer, stream);\n                } else {\n                    this.videoPanel.removeParticipant(peer);\n                }\n            },\n            error: (errorMessage) => {\n                this.error = errorMessage;\n            },\n            complete: () => {\n            }\n        };\n    }\n\n    async onToggleAudioClick() {\n        if (this.audioActive) {\n            await this.confService.stopAudio();\n        } else {\n            await this.confService.startAudio();\n        }\n\n        this.audioActive = !this.audioActive;\n    }\n\n    async onToggleVideoClick() {\n        if (this.videoActive) {\n            await this.confService.stopVideo();\n        } else {\n            await this.confService.startVideo();\n        }\n\n        this.videoActive = !this.videoActive;\n    }\n\n    async onLeaveClick() {\n        await this.confService.leave();\n        this.router.navigate(['/']);\n    }\n}\n","<div class=\"container\" *ngIf=\"error !== null\">\n  <div>\n    {{ error }}\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"error === null\">\n  <div class=\"main-panel\">\n    <app-video-panel [me]=\"me\" class=\"video-panel\"></app-video-panel>\n    <app-participants></app-participants>\n  </div>\n  <div class=\"controls-panel\">\n    <button mat-stroked-button id=\"mute-video-btn\" (click)=\"onToggleVideoClick()\" class=\"ctrl-button\">\n        <mat-icon>{{ toggleVideoButtonIcon }}</mat-icon> {{ toggleVideoButtonTitle }}\n    </button>\n    <button mat-stroked-button id=\"mute-audio-btn\" (click)=\"onToggleAudioClick()\" class=\"ctrl-button\">\n        <mat-icon>{{ toggleAudioButtonIcon }}</mat-icon> {{ toggleAudioButtonTitle }}\n    </button>\n    <button mat-stroked-button id=\"leave-btn\" (click)=\"onLeaveClick()\" class=\"ctrl-button\">\n        <mat-icon>exit_to_app</mat-icon> Leave\n    </button>\n  </div>\n</div>\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[videoHost]',\n})\nexport class VideoPanelDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class TranslateService {\n  data: any = {};\n\n  constructor(private http: HttpClient) { }\n\n  use(lang: string): Promise<{}> {\n    return new Promise<{}>((resolve, reject) => {\n      const langPath = `assets/languageFiles/${lang || 'en'}.json`;\n      this.http.get<{}>(langPath).subscribe(\n        translation => {\n          this.data = Object.assign({}, translation || {});\n          resolve(this.data);\n        },\n        error => {\n          this.data = {};\n          resolve(this.data);\n        }\n      );\n    });\n  }\n}","import { Component } from '@angular/core';\nimport { TranslateService } from './translate.service';\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n    title = 'instant_meeting';\n    constructor(private translate: TranslateService) {\n        console.log(translate.data);\n      }\n      setLang(lang: string) {\n        this.translate.use(lang);\n      }\n}\n","<app-top-bar></app-top-bar>\n<router-outlet></router-outlet>\n  <h1>\n    Welcome to {{ 'TITLE' | translate }}!\n  </h1>\n ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-join-conference',\n  templateUrl: './join-conference.component.html',\n  styleUrls: ['./join-conference.component.css']\n})\nexport class JoinConferenceComponent implements OnInit {\n\n  conferenceId = null;\n\n  conferenceForm = this.formBuilder.group({\n    id: '',\n    name: ''\n  });\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder) { }\n\n  async ngOnInit(): Promise<void> {\n    this.conferenceId = this.route.snapshot.paramMap.get('id');\n    this.conferenceForm.setValue({ id: this.conferenceId, name: '' });\n  }\n\n  onSubmit() {\n    this.router.navigate([ '/conference', { id: this.conferenceForm.value.id, name: this.conferenceForm.value.name }]);\n  }\n\n}\n","<div class=\"create-conference-container\">\n  <div class=\"create-conference-content\">\n    <p class=\"mat-headline\">\n      {{'Joinaconference'  | translate}}\n    </p>\n    <form [formGroup]=\"conferenceForm\" (ngSubmit)=\"onSubmit()\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{'Joinaconference_Id' | translate}}</mat-label>\n        <input matInput id=\"id\" type=\"text\" formControlName=\"id\" required />\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{'Joinaconference_Name' | translate}}</mat-label>\n        <input matInput id=\"name\" type=\"text\" formControlName=\"name\" required />\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" class=\"button\" type=\"submit\">{{'CreatingaConference_Join' | translate}}</button>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport VoxeetSDK from '@voxeet/voxeet-web-sdk';\nimport Conference from '@voxeet/voxeet-web-sdk/types/models/Conference';\nimport { MediaStreamWithType } from '@voxeet/voxeet-web-sdk/types/models/MediaStream';\nimport { Participant } from '@voxeet/voxeet-web-sdk/types/models/Participant';\nimport { Observable, Observer } from 'rxjs';\nimport { CredentialsVaultService } from './credentials-vault.service';\nimport { StorageService } from './storage.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ConferenceService {\n    private streamObserver: Observer<{ peer: Participant, stream: MediaStreamWithType, eventType: string }>;\n    private allowedEvents = [\"streamAdded\", \"streamUpdated\", \"streamRemoved\"];\n\n    constructor(\n        private storage: StorageService,\n        private credentialsVault: CredentialsVaultService\n    ) {\n        for (const eventType of this.allowedEvents) {\n            VoxeetSDK.conference.on(eventType, (peer: Participant, stream: MediaStreamWithType) => {\n                if (this.streamObserver) {\n                    this.streamObserver.next({ peer, stream, eventType });\n                }\n            });\n        }\n    }\n\n    async initialize() {\n        const credentials = await this.credentialsVault.getCredentials();\n        VoxeetSDK.initialize(credentials.key, credentials.secret);\n    }\n\n    async join(alias: string, name: string, observer: Observer<{ peer: Participant, stream: MediaStreamWithType, eventType: string }>): Promise<Conference> {\n        this.streamObserver = observer;\n\n        // load conference details and settings from storage\n        const conferenceDefaults = await this.storage.load(alias);\n\n        // open session (mandatory)\n        await VoxeetSDK.session.open({ name });\n\n        const conferenceOptions = {\n            alias: conferenceDefaults.id,\n            params: { ...conferenceDefaults.options },\n        };\n        // create conference\n        const conference = await VoxeetSDK.conference.create(conferenceOptions);\n        // join to created conference\n        return await VoxeetSDK.conference.join(conference, {\n            constraints: { audio: true, video: false },\n        });\n    }\n\n    async leave() {\n        this.streamObserver.complete();\n        this.streamObserver = null;\n        await VoxeetSDK.conference.leave();\n    }\n\n    async startAudio() {\n        await VoxeetSDK.conference.startAudio(this.me);\n    }\n\n    async stopAudio() {\n        await VoxeetSDK.conference.stopAudio(this.me);\n    }\n\n    async startVideo() {\n        const videoConstraints = {\n            width: {\n                min: '500',\n                max: '1280',\n            },\n            height: {\n                min: '300',\n                max: '720',\n            },\n        };\n        await VoxeetSDK.conference.startVideo(this.me, videoConstraints);\n    }\n\n    async stopVideo() {\n        await VoxeetSDK.conference.stopVideo(this.me);\n    }\n\n    get me() {\n        return VoxeetSDK.session.participant;\n    }\n\n    get connected() {\n        const all = [...VoxeetSDK.conference.participants].map((val) => val[1]);\n        return all.filter((item) => item.status === 'Connected');\n    }\n\n    get all() {\n        return [...VoxeetSDK.conference.participants].map((val) => val[1]);\n    }\n}\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { ConferenceService } from './conference.service';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\nimport { CreateConferenceComponent } from './create-conference/create-conference.component';\nimport { JoinConferenceComponent } from './join-conference/join-conference.component';\nimport { ConferenceComponent } from './conference/conference.component';\nimport { VideoPanelComponent } from './video-panel/video-panel.component';\nimport { ParticipantsComponent } from './participants/participants.component';\nimport { VideoPlayerComponent } from './video-player/video-player.component';\nimport { VideoPanelDirective } from './video-panel/video-panel.directive';\n\nimport {MatMenuModule} from '@angular/material/menu';\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\n\n// import { TranslateModule, TranslateLoader } from \"@ngx-translate/core\";\n// import { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\n\nimport { TranslateService } from './translate.service';\nimport { TranslatePipe } from './translate.pipe';\nimport { AppSettings } from 'src/AppSettings';\nconst Router = RouterModule.forRoot([\n  { path: '', component: WelcomePageComponent },\n  { path: 'welcome-page', component: WelcomePageComponent },\n  { path: 'create-conference', component: CreateConferenceComponent },\n  { path: 'join-conference', component: JoinConferenceComponent },\n  { path: 'conference', component: ConferenceComponent },\n]);\n\nexport function setupTranslateFactory(service: TranslateService): Function {\n  return () => service.use(AppSettings.language);\n}\n\n\n@NgModule({\n    declarations: [\n      AppComponent,\n      TopBarComponent,\n      WelcomePageComponent,\n      CreateConferenceComponent,\n      JoinConferenceComponent,\n      ConferenceComponent,\n      VideoPanelComponent,\n      ParticipantsComponent,\n      VideoPlayerComponent,\n      VideoPanelDirective,\n      TranslatePipe,\n    ],\n    imports: [\n      BrowserModule,\n      Router,\n      BrowserAnimationsModule,\n      MatToolbarModule,\n      MatButtonModule,\n      MatIconModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatSelectModule,\n      MatCheckboxModule,\n      MatCardModule,\n      FormsModule,\n      ReactiveFormsModule,\n      MatMenuModule,\n      HttpClientModule,\n    ],\n    providers: [\n      ConferenceService,\n      {\n        provide: APP_INITIALIZER,\n        useFactory: (svc: ConferenceService) => () => svc.initialize(),\n        deps: [ConferenceService],\n        multi: true\n      },\n      TranslateService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: setupTranslateFactory,\n      deps: [ TranslateService ],\n      multi: true\n    }\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from './translate.service';\n@Pipe({name: 'translate',pure:false})\n\nexport class TranslatePipe implements PipeTransform {\n\n  constructor(private translate: TranslateService) {}\n  transform(key: any): any {\n    return this.translate.data[key] || key;\n  }\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.css'],\n})\nexport class WelcomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg width=\"380px\" height=\"500px\" viewBox=\"0 0 837 1045\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\n  <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\n      <path d=\"M353,9 L626.664028,170 L626.664028,487 L353,642 L79.3359724,487 L79.3359724,170 L353,9 Z\" id=\"Polygon-1\" stroke=\"#007FB2\" stroke-width=\"6\" sketch:type=\"MSShapeGroup\"></path>\n      <path d=\"M78.5,529 L147,569.186414 L147,648.311216 L78.5,687 L10,648.311216 L10,569.186414 L78.5,529 Z\" id=\"Polygon-2\" stroke=\"#EF4A5B\" stroke-width=\"6\" sketch:type=\"MSShapeGroup\"></path>\n      <path d=\"M773,186 L827,217.538705 L827,279.636651 L773,310 L719,279.636651 L719,217.538705 L773,186 Z\" id=\"Polygon-3\" stroke=\"#795D9C\" stroke-width=\"6\" sketch:type=\"MSShapeGroup\"></path>\n      <path d=\"M639,529 L773,607.846761 L773,763.091627 L639,839 L505,763.091627 L505,607.846761 L639,529 Z\" id=\"Polygon-4\" stroke=\"#F2773F\" stroke-width=\"6\" sketch:type=\"MSShapeGroup\"></path>\n      <path d=\"M281,801 L383,861.025276 L383,979.21169 L281,1037 L179,979.21169 L179,861.025276 L281,801 Z\" id=\"Polygon-5\" stroke=\"#36B455\" stroke-width=\"6\" sketch:type=\"MSShapeGroup\"></path>\n  </g>\n</svg>\n<div class=\"message-box\">\n<h1>{{ 'TITLE' | translate }}</h1>\n<p>{{ 'Welcome_message' | translate }}</p>\n<div class=\"buttons-con\">\n  <div class=\"action-link-wrap\">\n    <a class=\"link-button\"><button mat-button  mat-button color=\"primary\" routerLink=\"/create-conference\">{{'Welcome_btm_new_meeting' | translate}}</button></a>\n    <a  class=\"link-button\"><button mat-button  mat-button color=\"primary\" routerLink=\"/join-conference\" >{{'Welcome_btn_join' | translate}}</button></a>    \n  </div>\n</div>\n</div>\n\n<!-- <div class=\"welcome-page-container\">\n  <div class=\"welcome-page-content\">\n    <p class=\"mat-headline\" >\n      {{ 'TITLE' | translate }}!!!\n       <br><br>\n    </p>\n    <p class=\"mat-headline\" >\n    \n  </p>\n    \n  </div>\n</div> -->\n","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { v4 as uuid } from 'uuid';\n\nimport { StorageService } from '../storage.service';\n\n@Component({\n  selector: 'app-create-conference',\n  templateUrl: './create-conference.component.html',\n  styleUrls: ['./create-conference.component.css']\n})\nexport class CreateConferenceComponent {\n  conferenceId = null;\n  conferenceForm = this.formBuilder.group({\n    alias: '',\n    pinCode: '',\n    dolbyVoice: true,\n    liveRecording: false,\n    rtcpMode: 'average',\n    videoCodec: 'H264'\n  });\n\n  constructor(\n    private storage: StorageService,\n    private formBuilder: FormBuilder,\n    private router: Router) { }\n\n  async onSubmit(): Promise<void> {\n    // Process checkout data \n    this.conferenceId = uuid();\n    this.storage.save({ id: this.conferenceId, options: this.conferenceForm.value });\n  }\n\n  onJoinClick() {\n    this.router.navigate(['/join-conference', { id: this.conferenceId }]);\n  }\n}\n","<div class=\"create-conference-container\">\n  <div class=\"create-conference-content\" *ngIf=\"conferenceId === null\">\n    <p class=\"mat-headline\">\n      {{'CreatingaConference' | translate}}\n    </p>\n    <form [formGroup]=\"conferenceForm\" (ngSubmit)=\"onSubmit()\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{'PinCode' | translate}}</mat-label>\n        <input matInput id=\"pinCode\" type=\"text\" formControlName=\"pinCode\" />\n      </mat-form-field>\n\n      <section class=\"conf-options-section\">\n        <mat-checkbox class=\"checkbox-margin\" formControlName=\"dolbyVoice\">{{'UseDolbyVoice' | translate}}</mat-checkbox>\n        <mat-checkbox class=\"checkbox-margin\" formControlName=\"liveRecording\">{{'AllowLiveRecording' | translate}}</mat-checkbox>\n      </section>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{'RTCPMode' | translate}}</mat-label>\n        <mat-select formControlName=\"rtcpMode\">\n          <mat-option value=\"worst\">{{'RTCPMode1' | translate}}</mat-option>\n          <mat-option value=\"average\">{{'RTCPMode2' | translate}}</mat-option>\n          <mat-option value=\"max\">{{'RTCPMode3' | translate}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{'VideoCodec' | translate}}</mat-label>\n        <mat-select required formControlName=\"videoCodec\">\n          <mat-option value=\"H264\" selected>H264</mat-option>\n          <mat-option value=\"V8\">V8</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <button mat-raised-button color=\"primary\" class=\"button\" type=\"submit\">{{'Create' | translate}}</button>\n\n    </form>\n  </div>\n  <div class=\"create-conference-content\" *ngIf=\"conferenceId !== null\">\n    <p class=\"mat-headline\">\n      {{'CreatingaConferenceSuccses' | translate}}\n    </p>\n    <p>\n      {{'CreatingaConference_Join_Mesagge' | translate}}\n    </p>\n    <mat-card>\n      {{conferenceId}}\n    </mat-card>\n    <button mat-raised-button color=\"primary\" type=\"button\" class=\"mt10\" (click)=\"onJoinClick()\">{{'CreatingaConference_Join' | translate}}</button>\n  </div>\n</div>\n","export class AppSettings {\r\n  public static language = 'en';\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '../translate.service';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor(private translate: TranslateService) {\n    console.log(translate.data);\n  }\n  setLang(lang: string) {\n    this.translate.use(lang);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-icon>videocam</mat-icon><a routerLink=\"/\" class=\"header\" style=\"margin-left: 1rem;\">{{ 'TITLE' | translate }}</a>\n\n\n    <span class=\"fill-remaining-space\"style=\"position: absolute; right:5rem !important;\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>translate 🇬🇧 </mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\" [overlapTrigger]=\"false\">\n        <button mat-menu-item (click)=\"setLang('en')\">\n          <mat-icon>🇬🇧</mat-icon>\n          <span>English</span>\n        </button>\n        <button mat-menu-item (click)=\"setLang('tr')\">\n          <mat-icon>🇹🇷</mat-icon>\n          <span>Turkish</span>\n        </button>\n        <button mat-menu-item (click)=\"setLang('fr')\">\n          <mat-icon>🇫🇷</mat-icon>\n          <span>French</span>\n        </button>\n        <button mat-menu-item (click)=\"setLang('gr')\">\n          <mat-icon>🇩🇪</mat-icon>\n          <span>German</span>\n        </button>\n        <button mat-menu-item (click)=\"setLang('sh')\">\n          <mat-icon>🇪🇸</mat-icon>\n          <span>Spanish</span>\n        </button>\n        <button mat-menu-item (click)=\"setLang('fl')\">\n          <mat-icon>🇳🇱</mat-icon>\n          <span>Dutch</span>\n        </button>\n        <button mat-menu-item (click)=\"setLang('ua')\">\n          <mat-icon>🇸🇦</mat-icon>\n          <span>Arabic</span>\n        </button>\n      </mat-menu>\n    </span>\n\n</mat-toolbar>\n","import { Injectable } from '@angular/core';\nimport { ConferenceOptions } from './models/conferenceOptions';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageService {\n    constructor() {}\n\n    save(conferenceOptions): Promise<boolean> {\n        // TODO: save conference defaults to a storage\n        return new Promise((resolve) => resolve(true));\n    }\n\n    load(conferenceId: string): Promise<ConferenceOptions> {\n        return new Promise((resolve) =>\n            resolve({\n                id: conferenceId,\n                options: {\n                    alias: conferenceId,\n                    pinCode: '',\n                    dolbyVoice: true,\n                    liveRecording: false,\n                    rtcpMode: 'average',\n                    videoCodec: 'H264',\n                },\n            })\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CredentialsVaultService {\n    constructor() {}\n\n    getCredentials() : Promise<any> {\n        return Promise.resolve({\n            key: 'AocrLmFwH3_3QWw5H2a-SA==',\n            secret: 'JV9ranRSxiezp88AQe3JiuSbB2LG10DcfwBt-1L_1N8=',\n        });\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}