{"version":3,"sources":["webpack:///src/app/video-panel/video-panel.component.ts","webpack:///src/app/video-panel/video-panel.component.html","webpack:///src/app/participants/participants.component.html","webpack:///src/app/participants/participants.component.ts","webpack:///src/environments/environment.ts","webpack:///src/app/video-player/video-player.component.html","webpack:///src/app/video-player/video-player.component.ts","webpack:///src/app/conference/conference.component.html","webpack:///src/app/conference/conference.component.ts","webpack:///src/app/video-panel/video-panel.directive.ts","webpack:///src/app/translate.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/join-conference/join-conference.component.ts","webpack:///src/app/join-conference/join-conference.component.html","webpack:///src/app/conference.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/translate.pipe.ts","webpack:///src/app/welcome-page/welcome-page.component.ts","webpack:///src/app/welcome-page/welcome-page.component.html","webpack:///src/app/create-conference/create-conference.component.html","webpack:///src/app/create-conference/create-conference.component.ts","webpack:///src/AppSettings.ts","webpack:///src/app/top-bar/top-bar.component.ts","webpack:///src/app/top-bar/top-bar.component.html","webpack:///src/app/storage.service.ts","webpack:///src/app/credentials-vault.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["VideoPanelComponent","componentFactoryResolver","children","Map","peer","stream","componentFactory","resolveComponentFactory","viewContainerRef","videoHost","componentRef","createComponent","instance","set","id","has","get","addParticipant","ParticipantsComponent","confService","all","filter","user","type","environment","production","VideoPlayerComponent","error","videoStream","value","video","getVideoTracks","length","nativeElement","srcObject","play","ConferenceComponent","route","router","streamObserver","conferenceId","conference","name","me","audioActive","videoActive","initStreamObserver","snapshot","paramMap","join","conf","next","eventType","videoPanel","updateParticipant","removeParticipant","errorMessage","complete","stopAudio","startAudio","stopVideo","startVideo","leave","navigate","VideoPanelDirective","TranslateService","http","data","lang","Promise","resolve","reject","langPath","subscribe","translation","Object","assign","AppComponent","translate","title","console","log","use","JoinConferenceComponent","formBuilder","conferenceForm","group","setValue","onSubmit","ConferenceService","storage","credentialsVault","allowedEvents","on","getCredentials","credentials","initialize","key","secret","alias","observer","load","conferenceDefaults","session","open","conferenceOptions","params","options","create","constraints","audio","videoConstraints","width","min","max","height","participant","participants","map","val","item","status","Router","forRoot","path","component","setupTranslateFactory","service","language","AppModule","provide","useFactory","svc","deps","multi","TranslatePipe","WelcomePageComponent","CreateConferenceComponent","pinCode","dolbyVoice","liveRecording","rtcpMode","videoCodec","save","AppSettings","TopBarComponent","setLang","StorageService","CredentialsVaultService","bootstrapModule","err","webpackEmptyAsyncContext","req","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, ComponentFactoryResolver, ComponentRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { MediaStreamWithType } from '@voxeet/voxeet-web-sdk/types/models/MediaStream';\nimport { Participant } from '@voxeet/voxeet-web-sdk/types/models/Participant';\nimport { VideoPlayerComponent } from '../video-player/video-player.component';\nimport { VideoPanelDirective } from './video-panel.directive';\n\n@Component({\n    selector: 'app-video-panel',\n    templateUrl: './video-panel.component.html',\n    styleUrls: ['./video-panel.component.css'],\n})\nexport class VideoPanelComponent implements OnInit {\n    @ViewChild(VideoPanelDirective, { static: true }) videoHost!: VideoPanelDirective;\n\n    private children: Map<string, VideoPlayerComponent> = new Map();\n\n    constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n\n    ngOnInit(): void {\n    }\n\n    addParticipant(peer: Participant, stream: MediaStreamWithType): void {\n       \n        const componentFactory = this.componentFactoryResolver.resolveComponentFactory(VideoPlayerComponent);\n        const viewContainerRef = this.videoHost.viewContainerRef;\n        const componentRef = viewContainerRef.createComponent<VideoPlayerComponent>(componentFactory);\n        componentRef.instance.stream = stream;\n        this.children.set(peer.id, componentRef.instance);\n    }\n\n    updateParticipant(peer: Participant, stream: MediaStreamWithType): void {\n        if (this.children.has(peer.id)) {\n            this.children.get(peer.id).stream = stream;\n        } else {\n            this.addParticipant(peer, stream);\n        }\n    }\n\n    removeParticipant(peer: Participant): void {\n        this.children.delete(peer.id);\n    }\n}\n","<div class=\"video-panel\">\n    <ng-template videoHost></ng-template>\n</div>\n","<div class=\"right-panel\">\n    <ul>\n        <li *ngFor=\"let member of participants\">\n            <div class=\"participant\">\n                <div class=\"name\" id=\"{{member.id}}\">{{ member.info.name }}</div>\n                <div class=\"info\">\n                    <div class=\"status\">{{ member.status }}</div>\n                </div>\n            </div>\n        </li>\n    </ul>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ConferenceService } from '../conference.service';\n\n@Component({\n    selector: 'app-participants',\n    templateUrl: './participants.component.html',\n    styleUrls: ['./participants.component.css'],\n})\nexport class ParticipantsComponent implements OnInit {\n    constructor(private confService: ConferenceService) {}\n\n    ngOnInit(): void {}\n\n    get participants() {\n        return this.confService.all.filter(user => user.type === 'user');\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<video #video playsinline=\"true\" autoplay=\"autoplay\" muted=\"true\" width=\"200\" height=\"200\">\n    <p *ngIf=\"error\">{{ error }}</p>\n</video>\n","import { Component, Input, OnInit, ViewChild } from '@angular/core';\nimport { MediaStreamWithType } from '@voxeet/voxeet-web-sdk/types/models/MediaStream';\nimport { Participant } from '@voxeet/voxeet-web-sdk/types/models/Participant';\n\n@Component({\n    selector: 'app-video-player',\n    templateUrl: './video-player.component.html',\n    styleUrls: ['./video-player.component.css'],\n})\nexport class VideoPlayerComponent implements OnInit {\n    @ViewChild(\"video\") video: any;\n\n    private videoStream: MediaStreamWithType;\n\n    error = null;\n\n    constructor() {}\n\n    get stream() {\n        return this.videoStream;\n    }\n\n    set stream(value: MediaStreamWithType) {\n        this.videoStream = value;\n        if (this.video) {\n            if (this.videoStream != null && this.videoStream.getVideoTracks().length) {\n                this.video.nativeElement.srcObject = this.videoStream;\n                this.video.nativeElement.play();\n            } else {\n                this.video.nativeElement.srcObject = null;\n            }\n        }\n    }\n\n    ngOnInit(): void {\n\n    }\n}\n","<div class=\"container\" *ngIf=\"error !== null\">\n  <div>\n    {{ error }}\n  </div>\n</div>\n<div class=\"container\" *ngIf=\"error === null\">\n  <div class=\"main-panel\">\n    <app-video-panel [me]=\"me\" class=\"video-panel\"></app-video-panel>\n    <app-participants></app-participants>\n  </div>\n  <div class=\"controls-panel\">\n    <button mat-stroked-button id=\"mute-video-btn\" (click)=\"onToggleVideoClick()\" class=\"ctrl-button\">\n        <mat-icon>{{ toggleVideoButtonIcon }}</mat-icon> {{ toggleVideoButtonTitle }}\n    </button>\n    <button mat-stroked-button id=\"mute-audio-btn\" (click)=\"onToggleAudioClick()\" class=\"ctrl-button\">\n        <mat-icon>{{ toggleAudioButtonIcon }}</mat-icon> {{ toggleAudioButtonTitle }}\n    </button>\n    <button mat-stroked-button id=\"leave-btn\" (click)=\"onLeaveClick()\" class=\"ctrl-button\">\n        <mat-icon>exit_to_app</mat-icon> Leave\n    </button>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport Conference from '@voxeet/voxeet-web-sdk/types/models/Conference';\nimport { MediaStreamWithType } from '@voxeet/voxeet-web-sdk/types/models/MediaStream';\nimport { Participant } from '@voxeet/voxeet-web-sdk/types/models/Participant';\nimport { Observer } from 'rxjs';\n\nimport { ConferenceService } from '../conference.service';\nimport { VideoPanelComponent } from '../video-panel/video-panel.component';\n\n@Component({\n    selector: 'app-conference',\n    templateUrl: './conference.component.html',\n    styleUrls: ['./conference.component.css'],\n})\nexport class ConferenceComponent implements OnInit {\n    @ViewChild(VideoPanelComponent) private videoPanel! : VideoPanelComponent;\n\n    private streamObserver: Observer<{ peer: Participant, stream: MediaStreamWithType, eventType: string }> = null;\n\n    conferenceId: string = null;\n    conference: Conference = null;\n    name: string = null;\n    me: Participant = null;\n\n    error = null;\n\n    audioActive = false;\n    videoActive = false;\n\n    constructor(\n        private confService: ConferenceService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) {\n        this.initStreamObserver();\n    }\n\n    get toggleAudioButtonTitle() {\n        return this.audioActive ? 'Mute Audio' : 'Unmute Audio';\n    }\n\n    get toggleAudioButtonIcon() {\n        return this.audioActive ? 'voice_over_off' : 'record_voice_over';\n    }\n\n    get toggleVideoButtonTitle() {\n        return this.videoActive ? 'Disable Video' : 'Enable Video';\n    }\n\n    get toggleVideoButtonIcon() {\n        return this.videoActive ? 'videocam_off' : 'videocam';\n    }\n\n    async ngOnInit(): Promise<void> {\n        // read conference id and participant name from URI\n        this.conferenceId = this.route.snapshot.paramMap.get('id');\n        this.name = this.route.snapshot.paramMap.get('name');\n\n        try {\n            // create conference or join to existing\n            const conf = await this.confService.join(\n                this.conferenceId,\n                this.name,\n                this.streamObserver\n            );\n            this.conference = conf;\n\n            this.audioActive = true;\n            this.videoActive = false;\n\n            this.me = this.confService.me;\n        } catch (err) {\n            this.error = err;\n        }\n    }\n\n    private initStreamObserver() {\n        this.streamObserver = {\n            next: ({ peer, stream, eventType }) => {\n                if (eventType === \"streamAdded\") {\n                    this.videoPanel.addParticipant(peer, stream);\n                } else if (eventType === \"streamUpdated\") {\n                    this.videoPanel.updateParticipant(peer, stream);\n                } else {\n                    this.videoPanel.removeParticipant(peer);\n                }\n            },\n            error: (errorMessage) => {\n                this.error = errorMessage;\n            },\n            complete: () => {\n            }\n        };\n    }\n\n    async onToggleAudioClick() {\n        if (this.audioActive) {\n            await this.confService.stopAudio();\n        } else {\n            await this.confService.startAudio();\n        }\n\n        this.audioActive = !this.audioActive;\n    }\n\n    async onToggleVideoClick() {\n        if (this.videoActive) {\n            await this.confService.stopVideo();\n        } else {\n            await this.confService.startVideo();\n        }\n\n        this.videoActive = !this.videoActive;\n    }\n\n    async onLeaveClick() {\n        await this.confService.leave();\n        this.router.navigate(['/']);\n    }\n}\n","import { Directive, ViewContainerRef } from '@angular/core';\n\n@Directive({\n  selector: '[videoHost]',\n})\nexport class VideoPanelDirective {\n  constructor(public viewContainerRef: ViewContainerRef) { }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class TranslateService {\n  data: any = {};\n\n  constructor(private http: HttpClient) { }\n\n  use(lang: string): Promise<{}> {\n    return new Promise<{}>((resolve, reject) => {\n      const langPath = `assets/languageFiles/${lang || 'en'}.json`;\n      this.http.get<{}>(langPath).subscribe(\n        translation => {\n          this.data = Object.assign({}, translation || {});\n          resolve(this.data);\n        },\n        error => {\n          this.data = {};\n          resolve(this.data);\n        }\n      );\n    });\n  }\n}","import { Component } from '@angular/core';\nimport { TranslateService } from './translate.service';\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n    title = 'instant_meeting';\n    constructor(private translate: TranslateService) {\n        console.log(translate.data);\n      }\n      setLang(lang: string) {\n        this.translate.use(lang);\n      }\n}\n","<app-top-bar></app-top-bar>\n<router-outlet></router-outlet>\n  <h1>\n    Welcome to {{ 'TITLE' | translate }}!\n  </h1>\n ","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-join-conference',\n  templateUrl: './join-conference.component.html',\n  styleUrls: ['./join-conference.component.css']\n})\nexport class JoinConferenceComponent implements OnInit {\n\n  conferenceId = null;\n\n  conferenceForm = this.formBuilder.group({\n    id: '',\n    name: ''\n  });\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private formBuilder: FormBuilder) { }\n\n  async ngOnInit(): Promise<void> {\n    this.conferenceId = this.route.snapshot.paramMap.get('id');\n    this.conferenceForm.setValue({ id: this.conferenceId, name: '' });\n  }\n\n  onSubmit() {\n    this.router.navigate([ '/conference', { id: this.conferenceForm.value.id, name: this.conferenceForm.value.name }]);\n  }\n\n}\n","<div class=\"create-conference-container\">\n  <div class=\"create-conference-content\">\n    <p class=\"mat-headline\">\n      {{'Joinaconference'  | translate}}\n    </p>\n    <form [formGroup]=\"conferenceForm\" (ngSubmit)=\"onSubmit()\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{'Joinaconference_Id' | translate}}</mat-label>\n        <input matInput id=\"id\" type=\"text\" formControlName=\"id\" required />\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{'Joinaconference_Name' | translate}}</mat-label>\n        <input matInput id=\"name\" type=\"text\" formControlName=\"name\" required />\n      </mat-form-field>\n      <button mat-raised-button color=\"primary\" class=\"button\" type=\"submit\">{{'CreatingaConference_Join' | translate}}</button>\n    </form>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport VoxeetSDK from '@voxeet/voxeet-web-sdk';\nimport Conference from '@voxeet/voxeet-web-sdk/types/models/Conference';\nimport { MediaStreamWithType } from '@voxeet/voxeet-web-sdk/types/models/MediaStream';\nimport { Participant } from '@voxeet/voxeet-web-sdk/types/models/Participant';\nimport { Observable, Observer } from 'rxjs';\nimport { CredentialsVaultService } from './credentials-vault.service';\nimport { StorageService } from './storage.service';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class ConferenceService {\n    private streamObserver: Observer<{ peer: Participant, stream: MediaStreamWithType, eventType: string }>;\n    private allowedEvents = [\"streamAdded\", \"streamUpdated\", \"streamRemoved\"];\n\n    constructor(\n        private storage: StorageService,\n        private credentialsVault: CredentialsVaultService\n    ) {\n        for (const eventType of this.allowedEvents) {\n            VoxeetSDK.conference.on(eventType, (peer: Participant, stream: MediaStreamWithType) => {\n                if (this.streamObserver) {\n                    this.streamObserver.next({ peer, stream, eventType });\n                }\n            });\n        }\n    }\n\n    async initialize() {\n        const credentials = await this.credentialsVault.getCredentials();\n        VoxeetSDK.initialize(credentials.key, credentials.secret);\n    }\n\n    async join(alias: string, name: string, observer: Observer<{ peer: Participant, stream: MediaStreamWithType, eventType: string }>): Promise<Conference> {\n        this.streamObserver = observer;\n\n        // load conference details and settings from storage\n        const conferenceDefaults = await this.storage.load(alias);\n\n        // open session (mandatory)\n        await VoxeetSDK.session.open({ name });\n\n        const conferenceOptions = {\n            alias: conferenceDefaults.id,\n            params: { ...conferenceDefaults.options },\n        };\n        // create conference\n        const conference = await VoxeetSDK.conference.create(conferenceOptions);\n        // join to created conference\n        return await VoxeetSDK.conference.join(conference, {\n            constraints: { audio: true, video: false },\n        });\n    }\n\n    async leave() {\n        this.streamObserver.complete();\n        this.streamObserver = null;\n        await VoxeetSDK.conference.leave();\n    }\n\n    async startAudio() {\n        await VoxeetSDK.conference.startAudio(this.me);\n    }\n\n    async stopAudio() {\n        await VoxeetSDK.conference.stopAudio(this.me);\n    }\n\n    async startVideo() {\n        const videoConstraints = {\n            width: {\n                min: '500',\n                max: '1280',\n            },\n            height: {\n                min: '300',\n                max: '720',\n            },\n        };\n        await VoxeetSDK.conference.startVideo(this.me, videoConstraints);\n    }\n\n    async stopVideo() {\n        await VoxeetSDK.conference.stopVideo(this.me);\n    }\n\n    get me() {\n        return VoxeetSDK.session.participant;\n    }\n\n    get connected() {\n        const all = [...VoxeetSDK.conference.participants].map((val) => val[1]);\n        return all.filter((item) => item.status === 'Connected');\n    }\n\n    get all() {\n        return [...VoxeetSDK.conference.participants].map((val) => val[1]);\n    }\n}\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { ConferenceService } from './conference.service';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { TopBarComponent } from './top-bar/top-bar.component';\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\nimport { CreateConferenceComponent } from './create-conference/create-conference.component';\nimport { JoinConferenceComponent } from './join-conference/join-conference.component';\nimport { ConferenceComponent } from './conference/conference.component';\nimport { VideoPanelComponent } from './video-panel/video-panel.component';\nimport { ParticipantsComponent } from './participants/participants.component';\nimport { VideoPlayerComponent } from './video-player/video-player.component';\nimport { VideoPanelDirective } from './video-panel/video-panel.directive';\n\nimport {MatMenuModule} from '@angular/material/menu';\nimport { HttpClient, HttpClientModule } from \"@angular/common/http\";\n\n// import { TranslateModule, TranslateLoader } from \"@ngx-translate/core\";\n// import { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\n\nimport { TranslateService } from './translate.service';\nimport { TranslatePipe } from './translate.pipe';\nimport { AppSettings } from 'src/AppSettings';\nconst Router = RouterModule.forRoot([\n  { path: '', component: WelcomePageComponent },\n  { path: 'welcome-page', component: WelcomePageComponent },\n  { path: 'create-conference', component: CreateConferenceComponent },\n  { path: 'join-conference', component: JoinConferenceComponent },\n  { path: 'conference', component: ConferenceComponent },\n]);\n\nexport function setupTranslateFactory(service: TranslateService): Function {\n  return () => service.use(AppSettings.language);\n}\n\n\n@NgModule({\n    declarations: [\n      AppComponent,\n      TopBarComponent,\n      WelcomePageComponent,\n      CreateConferenceComponent,\n      JoinConferenceComponent,\n      ConferenceComponent,\n      VideoPanelComponent,\n      ParticipantsComponent,\n      VideoPlayerComponent,\n      VideoPanelDirective,\n      TranslatePipe,\n    ],\n    imports: [\n      BrowserModule,\n      Router,\n      BrowserAnimationsModule,\n      MatToolbarModule,\n      MatButtonModule,\n      MatIconModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatSelectModule,\n      MatCheckboxModule,\n      MatCardModule,\n      FormsModule,\n      ReactiveFormsModule,\n      MatMenuModule,\n      HttpClientModule,\n    ],\n    providers: [\n      ConferenceService,\n      {\n        provide: APP_INITIALIZER,\n        useFactory: (svc: ConferenceService) => () => svc.initialize(),\n        deps: [ConferenceService],\n        multi: true\n      },\n      TranslateService,\n    {\n      provide: APP_INITIALIZER,\n      useFactory: setupTranslateFactory,\n      deps: [ TranslateService ],\n      multi: true\n    }\n    ],\n    bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { TranslateService } from './translate.service';\n@Pipe({name: 'translate',pure:false})\n\nexport class TranslatePipe implements PipeTransform {\n\n  constructor(private translate: TranslateService) {}\n  transform(key: any): any {\n    return this.translate.data[key] || key;\n  }\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.css'],\n})\nexport class WelcomePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<svg width=\"380px\" height=\"500px\" viewBox=\"0 0 837 1045\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\">\n  <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\" sketch:type=\"MSPage\">\n      <path d=\"M353,9 L626.664028,170 L626.664028,487 L353,642 L79.3359724,487 L79.3359724,170 L353,9 Z\" id=\"Polygon-1\" stroke=\"#007FB2\" stroke-width=\"6\" sketch:type=\"MSShapeGroup\"></path>\n      <path d=\"M78.5,529 L147,569.186414 L147,648.311216 L78.5,687 L10,648.311216 L10,569.186414 L78.5,529 Z\" id=\"Polygon-2\" stroke=\"#EF4A5B\" stroke-width=\"6\" sketch:type=\"MSShapeGroup\"></path>\n      <path d=\"M773,186 L827,217.538705 L827,279.636651 L773,310 L719,279.636651 L719,217.538705 L773,186 Z\" id=\"Polygon-3\" stroke=\"#795D9C\" stroke-width=\"6\" sketch:type=\"MSShapeGroup\"></path>\n      <path d=\"M639,529 L773,607.846761 L773,763.091627 L639,839 L505,763.091627 L505,607.846761 L639,529 Z\" id=\"Polygon-4\" stroke=\"#F2773F\" stroke-width=\"6\" sketch:type=\"MSShapeGroup\"></path>\n      <path d=\"M281,801 L383,861.025276 L383,979.21169 L281,1037 L179,979.21169 L179,861.025276 L281,801 Z\" id=\"Polygon-5\" stroke=\"#36B455\" stroke-width=\"6\" sketch:type=\"MSShapeGroup\"></path>\n  </g>\n</svg>\n<div class=\"message-box\">\n<h1>{{ 'TITLE' | translate }}</h1>\n<p>{{ 'Welcome_message' | translate }}</p>\n<div class=\"buttons-con\">\n  <div class=\"action-link-wrap\">\n    <a class=\"link-button\"><button mat-button  mat-button color=\"primary\" routerLink=\"/create-conference\">{{'Welcome_btm_new_meeting' | translate}}</button></a>\n    <a  class=\"link-button\"><button mat-button  mat-button color=\"primary\" routerLink=\"/join-conference\" >{{'Welcome_btn_join' | translate}}</button></a>    \n  </div>\n</div>\n</div>\n\n<!-- <div class=\"welcome-page-container\">\n  <div class=\"welcome-page-content\">\n    <p class=\"mat-headline\" >\n      {{ 'TITLE' | translate }}!!!\n       <br><br>\n    </p>\n    <p class=\"mat-headline\" >\n    \n  </p>\n    \n  </div>\n</div> -->\n","<div class=\"create-conference-container\">\n  <div class=\"create-conference-content\" *ngIf=\"conferenceId === null\">\n    <p class=\"mat-headline\">\n      {{'CreatingaConference' | translate}}\n    </p>\n    <form [formGroup]=\"conferenceForm\" (ngSubmit)=\"onSubmit()\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{'PinCode' | translate}}</mat-label>\n        <input matInput id=\"pinCode\" type=\"text\" formControlName=\"pinCode\" />\n      </mat-form-field>\n\n      <section class=\"conf-options-section\">\n        <mat-checkbox class=\"checkbox-margin\" formControlName=\"dolbyVoice\">{{'UseDolbyVoice' | translate}}</mat-checkbox>\n        <mat-checkbox class=\"checkbox-margin\" formControlName=\"liveRecording\">{{'AllowLiveRecording' | translate}}</mat-checkbox>\n      </section>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{'RTCPMode' | translate}}</mat-label>\n        <mat-select formControlName=\"rtcpMode\">\n          <mat-option value=\"worst\">{{'RTCPMode1' | translate}}</mat-option>\n          <mat-option value=\"average\">{{'RTCPMode2' | translate}}</mat-option>\n          <mat-option value=\"max\">{{'RTCPMode3' | translate}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\">\n        <mat-label>{{'VideoCodec' | translate}}</mat-label>\n        <mat-select required formControlName=\"videoCodec\">\n          <mat-option value=\"H264\" selected>H264</mat-option>\n          <mat-option value=\"V8\">V8</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <button mat-raised-button color=\"primary\" class=\"button\" type=\"submit\">{{'Create' | translate}}</button>\n\n    </form>\n  </div>\n  <div class=\"create-conference-content\" *ngIf=\"conferenceId !== null\">\n    <p class=\"mat-headline\">\n      {{'CreatingaConferenceSuccses' | translate}}\n    </p>\n    <p>\n      {{'CreatingaConference_Join_Mesagge' | translate}}\n    </p>\n    <mat-card>\n      {{conferenceId}}\n    </mat-card>\n    <button mat-raised-button color=\"primary\" type=\"button\" class=\"mt10\" (click)=\"onJoinClick()\">{{'CreatingaConference_Join' | translate}}</button>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { v4 as uuid } from 'uuid';\n\nimport { StorageService } from '../storage.service';\n\n@Component({\n  selector: 'app-create-conference',\n  templateUrl: './create-conference.component.html',\n  styleUrls: ['./create-conference.component.css']\n})\nexport class CreateConferenceComponent {\n  conferenceId = null;\n  conferenceForm = this.formBuilder.group({\n    alias: '',\n    pinCode: '',\n    dolbyVoice: true,\n    liveRecording: false,\n    rtcpMode: 'average',\n    videoCodec: 'H264'\n  });\n\n  constructor(\n    private storage: StorageService,\n    private formBuilder: FormBuilder,\n    private router: Router) { }\n\n  async onSubmit(): Promise<void> {\n    // Process checkout data \n    this.conferenceId = uuid();\n    this.storage.save({ id: this.conferenceId, options: this.conferenceForm.value });\n  }\n\n  onJoinClick() {\n    this.router.navigate(['/join-conference', { id: this.conferenceId }]);\n  }\n}\n","export class AppSettings {\r\n  public static language = 'en';\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '../translate.service';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './top-bar.component.html',\n  styleUrls: ['./top-bar.component.css']\n})\nexport class TopBarComponent implements OnInit {\n\n  constructor(private translate: TranslateService) {\n    console.log(translate.data);\n  }\n  setLang(lang: string) {\n    this.translate.use(lang);\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-icon>videocam</mat-icon><a routerLink=\"/\" class=\"header\" style=\"margin-left: 1rem;\">{{ 'TITLE' | translate }}</a>\n\n\n    <span class=\"fill-remaining-space\"style=\"position: absolute; right:5rem !important;\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\">\n        <mat-icon>translate 🇬🇧 </mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\" [overlapTrigger]=\"false\">\n        <button mat-menu-item (click)=\"setLang('en')\">\n          <mat-icon>🇬🇧</mat-icon>\n          <span>English</span>\n        </button>\n        <button mat-menu-item (click)=\"setLang('tr')\">\n          <mat-icon>🇹🇷</mat-icon>\n          <span>Turkish</span>\n        </button>\n        <button mat-menu-item (click)=\"setLang('fr')\">\n          <mat-icon>🇫🇷</mat-icon>\n          <span>French</span>\n        </button>\n        <button mat-menu-item (click)=\"setLang('gr')\">\n          <mat-icon>🇩🇪</mat-icon>\n          <span>German</span>\n        </button>\n        <button mat-menu-item (click)=\"setLang('sh')\">\n          <mat-icon>🇪🇸</mat-icon>\n          <span>Spanish</span>\n        </button>\n        <button mat-menu-item (click)=\"setLang('fl')\">\n          <mat-icon>🇳🇱</mat-icon>\n          <span>Dutch</span>\n        </button>\n        <button mat-menu-item (click)=\"setLang('ua')\">\n          <mat-icon>🇸🇦</mat-icon>\n          <span>Arabic</span>\n        </button>\n      </mat-menu>\n    </span>\n\n</mat-toolbar>\n","import { Injectable } from '@angular/core';\nimport { ConferenceOptions } from './models/conferenceOptions';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class StorageService {\n    constructor() {}\n\n    save(conferenceOptions): Promise<boolean> {\n        // TODO: save conference defaults to a storage\n        return new Promise((resolve) => resolve(true));\n    }\n\n    load(conferenceId: string): Promise<ConferenceOptions> {\n        return new Promise((resolve) =>\n            resolve({\n                id: conferenceId,\n                options: {\n                    alias: conferenceId,\n                    pinCode: '',\n                    dolbyVoice: true,\n                    liveRecording: false,\n                    rtcpMode: 'average',\n                    videoCodec: 'H264',\n                },\n            })\n        );\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root',\n})\nexport class CredentialsVaultService {\n    constructor() {}\n\n    getCredentials() : Promise<any> {\n        return Promise.resolve({\n            key: 'AocrLmFwH3_3QWw5H2a-SA==',\n            secret: 'JV9ranRSxiezp88AQe3JiuSbB2LG10DcfwBt-1L_1N8=',\n        });\n    }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .catch((err) => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}